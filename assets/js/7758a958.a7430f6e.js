"use strict";(self.webpackChunkcv_as_a_project_documentation=self.webpackChunkcv_as_a_project_documentation||[]).push([[7885],{6580:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var t=r(5893),n=r(1151);const o={},a=void 0,c={id:"personal-kb/cheat-sheets/unstructured/program-process-thread",title:"program-process-thread",description:"A Program is an executable file containing a set of instructions and passively stored on disk. One program can have multiple processes. For example, the Chrome browser creates a different process for every single tab.",source:"@site/docs/personal-kb/cheat-sheets/unstructured/program-process-thread.md",sourceDirName:"personal-kb/cheat-sheets/unstructured",slug:"/personal-kb/cheat-sheets/unstructured/program-process-thread",permalink:"/docs/personal-kb/cheat-sheets/unstructured/program-process-thread",draft:!1,unlisted:!1,editUrl:"https://github.com/aliaksandrsurma/cv-as-a-project-docs/edit/main/docs/personal-kb/cheat-sheets/unstructured/program-process-thread.md",tags:[],version:"current",frontMatter:{},sidebar:"personalSidebar",previous:{title:"symmetric-asymentric-encryption",permalink:"/docs/personal-kb/cheat-sheets/unstructured/symmetric-asymentric-encryption"},next:{title:"Fun",permalink:"/docs/personal-kb/fun/"}},i={},p=[];function d(e){const s={li:"li",ol:"ol",p:"p",...(0,n.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"A Program is an executable file containing a set of instructions and passively stored on disk. One program can have multiple processes. For example, the Chrome browser creates a different process for every single tab."}),"\n",(0,t.jsx)(s.p,{children:"A Process means a program is in execution. When a program is loaded into the memory and becomes active, the program becomes a process. The process requires some essential resources such as registers, program counter, and stack."}),"\n",(0,t.jsx)(s.p,{children:"A Thread is the smallest unit of execution within a process."}),"\n",(0,t.jsx)(s.p,{children:"The following process explains the relationship between program, process, and thread."}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"The program contains a set of instructions."}),"\n",(0,t.jsx)(s.li,{children:"The program is loaded into memory. It becomes one or more running processes."}),"\n",(0,t.jsx)(s.li,{children:"When a process starts, it is assigned memory and resources. A process can have one or more threads. For example, in the Microsoft Word app, a thread might be responsible for spelling checking and the other thread for inserting text into the doc."}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Main differences between process and thread:\n\ud83d\udd39 Processes are usually independent, while threads exist as subsets of a process.\n\ud83d\udd39 Each process has its own memory space. Threads that belong to the same process share the same memory.\n\ud83d\udd39 A process is a heavyweight operation. It takes more time to create and terminate.\n\ud83d\udd39 Context switching is more expensive between processes.\n\ud83d\udd39 Inter-thread communication is faster for threads."})]})}function h(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,s,r)=>{r.d(s,{Z:()=>c,a:()=>a});var t=r(7294);const n={},o=t.createContext(n);function a(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);